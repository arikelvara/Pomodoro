{"version":3,"sources":["components/BreakInterval.js","components/SessionLength.js","components/Timer.js","components/App.js","serviceWorker.js","index.js"],"names":["BreakInterval","props","className","disabled","isPlay","onClick","breakInterval","decreaseBreak","increaseBreak","SessionLength","sessionLength","decreaseSession","increaseSession","Timer","state","isSession","timerSeconds","intervalId","playTimer","bind","stopTimer","resetTimer","decreaseTimer","setInterval","this","onPlayStopTimer","setState","timerMinutes","toggleInterval","updateTimerMinutes","prevState","clearInterval","React","Component","App","onIncreaseBreakInterval","onDecreaseBreakInterval","onIncreaseSessionLength","onDecreaseSessionLength","onToggleInterval","onUpdateTimerMinutes","onResetTimer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7b84eb3e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction BreakInterval(props){\r\n\tfunction decreaseCounter (){\r\n\t\tif (props.breakInterval === 1){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tprops.decreaseBreak();\r\n\t}\r\n\t\r\n\tfunction increaseCounter (){\r\n\t\tif (props.breakInterval === 60){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tprops.increaseBreak();\r\n\t}\r\n\t\r\n\treturn(\r\n\t<section>\r\n\t\t<h4>Break Duration</h4>\r\n\t\t<section className=\"interval-container\">\r\n\t\t\t<button disabled={props.isPlay === true ? \"disabled\" : \"\"} onClick={decreaseCounter}>Down</button>\r\n\t\t\t<p className=\"time-duration\">{props.breakInterval}</p>\r\n\t\t\t<button disabled={props.isPlay === true ? \"disabled\" : \"\"} onClick={increaseCounter}>Up</button>\r\n\t\t</section>\r\n\t</section>\r\n\t\r\n\t);\r\n}\r\n\r\n\r\nexport default BreakInterval;","import React from 'react';\r\n\r\nfunction SessionLength (props){\r\n\tfunction increaseSession (){\r\n\t\tif(props.sessionLength === 60){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tprops.increaseSession();\r\n\t}\r\n\t\r\n\tfunction decreaseSession (){\r\n\t\tif(props.sessionLength === 1){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tprops.decreaseSession();\r\n\t}\r\n\t\r\n\treturn (\r\n\t<section>\r\n\t\t<h4>Session Duration</h4>\r\n\t\t<section className=\"interval-container\">\r\n\t\t\t<button disabled={props.isPlay === true ? \"disabled\" : \"\"} onClick={decreaseSession}>Down</button>\r\n\t\t\t<p className=\"time-duration\">{props.sessionLength}</p>\r\n\t\t\t<button disabled={props.isPlay === true ? \"disabled\" : \"\"} onClick={increaseSession}>Up</button>\r\n\t\t</section>\r\n\t</section>\r\n\t\r\n\t);\r\n}\r\n\r\n\r\nexport default SessionLength;","import React from 'react';\r\n\r\n\r\nclass Timer extends React.Component {\r\n\t\r\n\tconstructor (){\r\n\t\tsuper ();\r\n\t\t\r\n\t\tthis.state={\r\n\t\t\tisSession: true,\r\n\t\t\ttimerSeconds: 0,\r\n\t\t\tintervalId: 0\r\n\t\t};\r\n\t\tthis.playTimer = this.playTimer.bind(this);\r\n\t\tthis.stopTimer = this.stopTimer.bind(this);\r\n\t\tthis.resetTimer = this.resetTimer.bind(this);\r\n\t\tthis.decreaseTimer= this.decreaseTimer.bind(this);\r\n\t}\r\n\t\r\n\t\r\n\tplayTimer(){\r\n\t\tlet intervalId = setInterval(this.decreaseTimer, 1000);\r\n\t\tthis.props.onPlayStopTimer(true);\r\n\t\tthis.setState({\r\n\t\t\tintervalId: intervalId\r\n\t\t})\r\n\t}\r\n\t\r\n\tdecreaseTimer(){\r\n\t\tswitch(this.state.timerSeconds){\r\n\t\t\tcase 0:\r\n\t\t\t\tif(this.props.timerMinutes === 0){\r\n\t\t\t\t\tif(this.state.isSession){\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tisSession: false\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.props.toggleInterval(this.state.isSession);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tisSession: true\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis.props.toggleInterval(this.state.isSession);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.props.updateTimerMinutes()\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\ttimerSeconds: 59\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthis.setState((prevState) => {\r\n\t\t\t\treturn{\r\n\t\t\t\t\ttimerSeconds: prevState.timerSeconds - 1 \r\n\t\t\t\t}\t\r\n\t\t\t})\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\t\r\n\tstopTimer(){\r\n\t\tclearInterval(this.state.intervalId);\r\n\t\tthis.props.onPlayStopTimer(false);\r\n\t}\r\n\t\r\n\tresetTimer(){\r\n\t\tthis.stopTimer();\r\n\t\tthis.props.resetTimer();\r\n\t\tthis.props.onPlayStopTimer(false);\r\n\t\tthis.setState({\r\n\t\t\ttimerSeconds: 0,\r\n\t\t\tisSession: true\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t<section>\r\n\t\t\t<section className=\"timer-container\">\r\n\t\t\t\t<h4>{this.state.isSession === true ? \"Session\" : \"Break\"}</h4>\r\n\t\t\t\t<span className=\"time\">{this.props.timerMinutes}</span>\r\n\t\t\t\t<span className=\"time\">:</span>\r\n\t\t\t\t<span className=\"time\">\r\n\t\t\t\t{this.state.timerSeconds === 0 ? \"00\" : this.state.timerSeconds < 10 ? \"0\" + this.state.timerSeconds : this.state.timerSeconds}\r\n\t\t\t\t</span>\r\n\t\t\t</section>\r\n\t\t\t<section className=\"timer-buttons\">\r\n\t\t\t\t<button onClick={this.playTimer}>Play</button>\r\n\t\t\t\t<button onClick={this.stopTimer}>Stop</button>\r\n\t\t\t\t<button onClick={this.resetTimer}>Restart</button>\r\n\t\t\t</section>\r\n\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Timer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport '../App.css';\nimport BreakInterval from './BreakInterval';\nimport SessionLength from './SessionLength';\nimport Timer from './Timer';\n\nclass App extends React.Component {\n  constructor (){\n\t\tsuper ();\n\t\t\n\t\tthis.state = {\n\t\t\tbreakInterval: 5,\n\t\t\tsessionLength: 25,\n\t\t\ttimerMinutes: 25,\n\t\t\tisPlay: false\n\t\t\t\n\t\t};\n\t\t//Break \n\t\tthis.onIncreaseBreakInterval = this.onIncreaseBreakInterval.bind(this);\n\t\tthis.onDecreaseBreakInterval = this.onDecreaseBreakInterval.bind(this);\n\t\t//Session\n\t\tthis.onIncreaseSessionLength = this.onIncreaseSessionLength.bind(this);\n\t\tthis.onDecreaseSessionLength = this.onDecreaseSessionLength.bind(this);\n\t\tthis.onToggleInterval = this.onToggleInterval.bind(this);\n\t\tthis.onUpdateTimerMinutes = this.onUpdateTimerMinutes.bind(this);\n\t\tthis.onResetTimer = this.onResetTimer.bind(this);\n\t\tthis.onPlayStopTimer = this.onPlayStopTimer.bind(this);\n\t\t\n\t}\n\t\n\tonIncreaseBreakInterval (){\n\t\tthis.setState((prevState) => {\n\t\t\treturn{\n\t\t\t\tbreakInterval: prevState.breakInterval + 1\n\t\t\t};\n\t\t});\n\t}\n\t\n\tonDecreaseBreakInterval (){\n\t\tthis.setState((prevState) => {\n\t\t\treturn{\n\t\t\t\tbreakInterval: prevState.breakInterval - 1\n\t\t\t};\n\t\t});\n\t}\n\t\n\tonIncreaseSessionLength(){\n\t\tthis.setState((prevState) => {\n\t\t\treturn{\n\t\t\t\tsessionLength: prevState.sessionLength + 1,\n\t\t\t\ttimerMinutes: prevState.sessionLength + 1\n\t\t\t};\n\t\t});\n\t}\n\t\n\tonDecreaseSessionLength(){\n\t\tthis.setState((prevState) => {\n\t\t\treturn{\n\t\t\t\tsessionLength: prevState.sessionLength - 1,\n\t\t\t\ttimerMinutes: prevState.sessionLength - 1\n\t\t\t};\n\t\t});\n\t}\n\t\n\tonUpdateTimerMinutes(){\n\t\tthis.setState((prevState) => {\n\t\t\treturn{\n\t\t\t\ttimerMinutes: prevState.timerMinutes -1\n\t\t\t}\n\t\t})\n\t}\n\t\n\tonToggleInterval (isSession){\n\t\tif(isSession){\n\t\t\tthis.setState({\n\t\t\ttimerMinutes: this.state.sessionLength\n\t\t})\n\t} else {\n\t\tthis.setState({\n\t\t\ttimerMinutes: this.state.breakInterval\n\t\t})\n\t}\n}\n\n\tonResetTimer (){\n\t\tthis.setState({\n\t\t\ttimerMinutes: this.state.sessionLength\n\t\t})\n\t}\n\t\n\tonPlayStopTimer(isPlay){\n\t\tthis.setState({\n\t\t\tisPlay: isPlay\n\t\t})\n\t}\n\t\n\trender(){\n\t\treturn (\n    <main>\n\t\t<h2>Pomodoro Clock</h2>\n\t\t<section className= \"break-time-container\">\n\t\t<BreakInterval \n\t\tisPlay={this.state.isPlay}\n\t\tbreakInterval={this.state.breakInterval} \n\t\tincreaseBreak={this.onIncreaseBreakInterval} \n\t\tdecreaseBreak={this.onDecreaseBreakInterval}/>\n\t\t<SessionLength \n\t\tisPlay={this.state.isPlay}\n\t\tsessionLength={this.state.sessionLength} \n\t\tincreaseSession={this.onIncreaseSessionLength} \n\t\tdecreaseSession={this.onDecreaseSessionLength}/>\n\t\t</section>\n\t\t<Timer\n\t\tisPlay={this.state.isPlay}\n\t\ttimerMinutes={this.state.timerMinutes} \n\t\tbreakInterval={this.state.breakInterval}\n\t\tupdateTimerMinutes= {this.onUpdateTimerMinutes}\n\t\ttoggleInterval={this.onToggleInterval}\n\t\tresetTimer={this.onResetTimer}\n\t\tonPlayStopTimer={this.onPlayStopTimer}\n\t\t/>\n\t\t</main>\n\t\t);\n\t}\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}